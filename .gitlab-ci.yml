---
image: gitlab/dind

variables:
  DOCKER_DRIVER: overlay

services:
- docker:dind

stages:
- build
- test
- release
- deploy

before_script:
  - docker info
  - whoami
  - hostname
  - docker login -u $REGISTRY_USER -p $REGISTRY_PASS docker.hbit.sztaki.hu:5000

  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

variables:
  CONTAINER_TEST_IMAGE: docker.hbit.sztaki.hu:5000/hexaa/hexaa-newui:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: docker.hbit.sztaki.hu:5000/hexaa/hexaa-newui:latest

build:
  stage: build
  script:
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE
  tags:
    - dind

code_style_check:
  stage: test
  script:
    - docker run -d --name project.local $CONTAINER_TEST_IMAGE
    - docker exec -t project.local /var/www/project/phpcs.sh
  tags:
    - dind

test:
  stage: test
  script:
    - docker network create hexaa-test
    - docker run --network=hexaa-test -d --name db -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_USER=someuser -e MYSQL_PASSWORD=somepass -e MYSQL_DATABASE=hexaa mysql
    - docker run --network=hexaa-test -d --name memcached memcached
    - docker run --network=hexaa-test -d --name grid elgalu/selenium
    - docker run --network=hexaa-test -d --name smtp mailhog/mailhog
    - docker run --network=hexaa-test -d --name project.local $CONTAINER_TEST_IMAGE
    - docker run --network=hexaa-test -d --name hexaa-test-data-manager hexaaproject/hexaa-test-data-manager:for-dev
    - docker run --network=hexaa-test dmfenton/wait db:3306 -t 120
    - docker run --network=hexaa-test -d --name hexaa-backend hexaaproject/hexaa-backend:for-dev
    - docker run --network=hexaa-test dmfenton/wait hexaa-backend:80 -t 120
    - docker run --network=hexaa-test dmfenton/wait project.local:443 -t 120
    - docker exec -t project.local /var/www/project/test.sh /var/www/project
  tags:
    - dind

release:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master
  tags:
    - dind

deploy:
  stage: deploy
  script:
    - ssh -A ubuntu@$DEPLOY_TARGET "docker login -u $REGISTRY_USER -p $REGISTRY_PASS docker.hbit.sztaki.hu:5000; docker pull $CONTAINER_RELEASE_IMAGE; docker stop hexaa-newui; docker rm hexaa-newui; docker run -d --name hexaa-newui --network=hexaa-test -e PROJECT_HOSTNAME=$DEPLOY_TARGET -p 80:80 -p 443:443 $CONTAINER_RELEASE_IMAGE;"
  only:
    - master
  tags:
    - dind
