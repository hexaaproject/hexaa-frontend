---
image: gitlab/dind

variables:
  CONTAINER_TEST_IMAGE:    $REGISTRY_ADDR/hexaa/hexaa-frontend:$CI_COMMIT_REF_NAME
  CONTAINER_STAGING_IMAGE: $REGISTRY_ADDR/hexaa/hexaa-frontend:staging
  CONTAINER_STABLE_IMAGE:  $REGISTRY_ADDR/hexaa/hexaa-frontend:latest
  CONTAINER_STAGING_RELEASE_IMAGE: hexaaproject/hexaa-frontend:staging
  CONTAINER_STABLE_RELEASE_IMAGE:  hexaaproject/hexaa-frontend:latest

services:
- docker:dind

stages:
- build
# - test
- release
- deploy

before_script:
  - docker info
  - whoami
  - hostname

  # Log into our private docker hub
  - docker login -u $REGISTRY_USER -p $REGISTRY_PASS $REGISTRY_ADDR

  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

build:
  stage: build
  script:
    - docker build -t $CONTAINER_TEST_IMAGE -f docker-prod/Dockerfile .
    - docker push $CONTAINER_TEST_IMAGE
  except:
    - staging

build_staging:
  stage: build
  script:
    - docker build -t $CONTAINER_TEST_IMAGE -f docker-prod/Dockerfile .
    - docker push $CONTAINER_TEST_IMAGE
  tags:
    - dind
  only:
    - staging

# TODO: switch to use new containers.
#
#code_style_check:
#  stage: test
#  script:
#    - docker run -d --name frontend $CONTAINER_TEST_IMAGE
#    - docker exec -t frontend /opt/hexaa-frontend/phpcs.sh
#    - docker exec -t frontend sh -c '/opt/hexaa-frontend/vendor/bin/var-dump-check --no-colors --symfony --exclude /opt/hexaa-frontend/vendor /opt/hexaa-frontend'
#  tags:
#    - dind
#
#test-organization:
#  stage: test
#  script:
#    - docker network create hexaa-test
#    - docker run --network=hexaa-test -d --name db -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_USER=someuser -e MYSQL_PASSWORD=somepass -e MYSQL_DATABASE=hexaa -v /builds/hexaa/hexaa-frontend/docker-prod/mysql_test_data_dump.sql:/docker-entrypoint-initdb.d/01-test_data.sql mariadb:10.2
#    - docker run --network=hexaa-test -d --name memcached memcached
#    - docker run --network=hexaa-test -d --name grid -e USE_SELENIUM=2 elgalu/selenium:3.2.0-p4
#    - docker run --network=hexaa-test -d --name smtp mailhog/mailhog
#    - docker run --network=hexaa-test -d --name frontend -v hexaa_ui_source:/opt/hexaa-frontend -e HEXAA_FRONTEND_API_BASE_URL="http://web/backend/api/" -e HEXAA_FRONTEND_MAILER_PORT=1025 $CONTAINER_TEST_IMAGE
#    - docker run --network=hexaa-test dmfenton/wait db:3306 -t 120
#    - docker run --network=hexaa-test -d --name backend -v hexaa_backend_source:/opt/hexaa-backend -v /builds/hexaa/hexaa-frontend/docker-prod/hexaa_entityids.yml:/opt/hexaa-backend/app/config/hexaa_entityids.yml -e HEXAA_BACKEND_DATABASE_USER=someuser -e HEXAA_BACKEND_DATABASE_PASSWORD=somepass -e HEXAA_BACKEND_ADMIN_ADMIN1=employee@project.local hexaaproject/hexaa-backend:new-api-dev
#    - docker run --network=hexaa-test -d --name web -v hexaa_ui_source:/opt/hexaa-frontend -v hexaa_backend_source:/opt/hexaa-backend -v /builds/hexaa/hexaa-frontend/docker-prod/default-hexaa-fakeshib.conf:/etc/apache2/sites-enabled/000-default.conf -e APACHE_SHIB_APACHE_MODULES_TO_START="rewrite proxy proxy_fcgi" -e APACHE_SHIB_APACHE_START_SHIB=false solazs/apache-shib
#    - docker run --network=hexaa-test dmfenton/wait grid:24444 -t 120
#    - docker run --network=hexaa-test dmfenton/wait smtp:1025 -t 120
#    - docker run --network=hexaa-test dmfenton/wait smtp:8025 -t 120
#    - docker run --network=hexaa-test dmfenton/wait web:80 -t 120
#    - docker exec -t frontend sh -c '/opt/hexaa-frontend/vendor/bin/behat -c /opt/hexaa-frontend/behat.yml -n --tags organization'
#  tags:
#    - dind
#
#test-service:
#  stage: test
#  script:
#    - docker network create hexaa-test
#    - docker run --network=hexaa-test -d --name db -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_USER=someuser -e MYSQL_PASSWORD=somepass -e MYSQL_DATABASE=hexaa -v /builds/hexaa/hexaa-frontend/docker-prod/mysql_test_data_dump.sql:/docker-entrypoint-initdb.d/01-test_data.sql mariadb:10.2
#    - docker run --network=hexaa-test -d --name memcached memcached
#    - docker run --network=hexaa-test -d --name grid -e USE_SELENIUM=2 elgalu/selenium:3.2.0-p4
#    - docker run --network=hexaa-test -d --name smtp mailhog/mailhog
#    - docker run --network=hexaa-test -d --name frontend -v hexaa_ui_source:/opt/hexaa-frontend -e HEXAA_FRONTEND_API_BASE_URL="http://web/backend/api/" -e HEXAA_FRONTEND_MAILER_PORT=1025 $CONTAINER_TEST_IMAGE
#    - docker run --network=hexaa-test dmfenton/wait db:3306 -t 120
#    - docker run --network=hexaa-test -d --name backend -v hexaa_backend_source:/opt/hexaa-backend -v /builds/hexaa/hexaa-frontend/docker-prod/hexaa_entityids.yml:/opt/hexaa-backend/app/config/hexaa_entityids.yml -e HEXAA_BACKEND_DATABASE_USER=someuser -e HEXAA_BACKEND_DATABASE_PASSWORD=somepass -e HEXAA_BACKEND_ADMIN_ADMIN1=employee@project.local hexaaproject/hexaa-backend:new-api-dev
#    - docker run --network=hexaa-test -d --name web -v hexaa_ui_source:/opt/hexaa-frontend -v hexaa_backend_source:/opt/hexaa-backend -v /builds/hexaa/hexaa-frontend/docker-prod/default-hexaa-fakeshib.conf:/etc/apache2/sites-enabled/000-default.conf -e APACHE_SHIB_APACHE_MODULES_TO_START="rewrite proxy proxy_fcgi" -e APACHE_SHIB_APACHE_START_SHIB=false solazs/apache-shib
#    - docker run --network=hexaa-test dmfenton/wait grid:24444 -t 120
#    - docker run --network=hexaa-test dmfenton/wait smtp:1025 -t 120
#    - docker run --network=hexaa-test dmfenton/wait smtp:8025 -t 120
#    - docker run --network=hexaa-test dmfenton/wait web:80 -t 120
#    - docker exec -t frontend sh -c '/opt/hexaa-frontend/vendor/bin/behat -c /opt/hexaa-frontend/behat.yml -n --tags service'
#  tags:
#    - dind
#
#test-profile:
#  stage: test
#  script:
#    - docker network create hexaa-test
#    - docker run --network=hexaa-test -d --name db -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_USER=someuser -e MYSQL_PASSWORD=somepass -e MYSQL_DATABASE=hexaa -v /builds/hexaa/hexaa-frontend/docker-prod/mysql_test_data_dump.sql:/docker-entrypoint-initdb.d/01-test_data.sql mariadb:10.2
#    - docker run --network=hexaa-test -d --name memcached memcached
#    - docker run --network=hexaa-test -d --name grid -e USE_SELENIUM=2 elgalu/selenium:3.2.0-p4
#    - docker run --network=hexaa-test -d --name smtp mailhog/mailhog
#    - docker run --network=hexaa-test -d --name frontend -v hexaa_ui_source:/opt/hexaa-frontend -e HEXAA_FRONTEND_API_BASE_URL="http://web/backend/api/" -e HEXAA_FRONTEND_MAILER_PORT=1025 $CONTAINER_TEST_IMAGE
#    - docker run --network=hexaa-test dmfenton/wait db:3306 -t 120
#    - docker run --network=hexaa-test -d --name backend -v hexaa_backend_source:/opt/hexaa-backend -v /builds/hexaa/hexaa-frontend/docker-prod/hexaa_entityids.yml:/opt/hexaa-backend/app/config/hexaa_entityids.yml -e HEXAA_BACKEND_DATABASE_USER=someuser -e HEXAA_BACKEND_DATABASE_PASSWORD=somepass -e HEXAA_BACKEND_ADMIN_ADMIN1=employee@project.local hexaaproject/hexaa-backend:new-api-dev
#    - docker run --network=hexaa-test -d --name web -v hexaa_ui_source:/opt/hexaa-frontend -v hexaa_backend_source:/opt/hexaa-backend -v /builds/hexaa/hexaa-frontend/docker-prod/default-hexaa-fakeshib.conf:/etc/apache2/sites-enabled/000-default.conf -e APACHE_SHIB_APACHE_MODULES_TO_START="rewrite proxy proxy_fcgi" -e APACHE_SHIB_APACHE_START_SHIB=false solazs/apache-shib
#    - docker run --network=hexaa-test dmfenton/wait grid:24444 -t 120
#    - docker run --network=hexaa-test dmfenton/wait smtp:1025 -t 120
#    - docker run --network=hexaa-test dmfenton/wait smtp:8025 -t 120
#    - docker run --network=hexaa-test dmfenton/wait web:80 -t 120
#    - docker exec -t frontend sh -c '/opt/hexaa-frontend/vendor/bin/behat -c /opt/hexaa-frontend/behat.yml -n --tags profile'
#  tags:
#    - dind
#
#test-admin:
#  stage: test
#  script:
#    - docker network create hexaa-test
#    - docker run --network=hexaa-test -d --name db -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_USER=someuser -e MYSQL_PASSWORD=somepass -e MYSQL_DATABASE=hexaa -v /builds/hexaa/hexaa-frontend/docker-prod/mysql_test_data_dump.sql:/docker-entrypoint-initdb.d/01-test_data.sql mariadb:10.2
#    - docker run --network=hexaa-test -d --name memcached memcached
#    - docker run --network=hexaa-test -d --name grid -e USE_SELENIUM=2 elgalu/selenium:3.2.0-p4
#    - docker run --network=hexaa-test -d --name smtp mailhog/mailhog
#    - docker run --network=hexaa-test -d --name frontend -v hexaa_ui_source:/opt/hexaa-frontend -e HEXAA_FRONTEND_API_BASE_URL="http://web/backend/api/" -e HEXAA_FRONTEND_MAILER_PORT=1025 $CONTAINER_TEST_IMAGE
#    - docker run --network=hexaa-test dmfenton/wait db:3306 -t 120
#    - docker run --network=hexaa-test -d --name backend -v hexaa_backend_source:/opt/hexaa-backend -v /builds/hexaa/hexaa-frontend/docker-prod/hexaa_entityids.yml:/opt/hexaa-backend/app/config/hexaa_entityids.yml -e HEXAA_BACKEND_DATABASE_USER=someuser -e HEXAA_BACKEND_DATABASE_PASSWORD=somepass -e HEXAA_BACKEND_ADMIN_ADMIN1=employee@project.local hexaaproject/hexaa-backend:new-api-dev
#    - docker run --network=hexaa-test -d --name web -v hexaa_ui_source:/opt/hexaa-frontend -v hexaa_backend_source:/opt/hexaa-backend -v /builds/hexaa/hexaa-frontend/docker-prod/default-hexaa-fakeshib.conf:/etc/apache2/sites-enabled/000-default.conf -e APACHE_SHIB_APACHE_MODULES_TO_START="rewrite proxy proxy_fcgi" -e APACHE_SHIB_APACHE_START_SHIB=false solazs/apache-shib
#    - docker run --network=hexaa-test dmfenton/wait grid:24444 -t 120
#    - docker run --network=hexaa-test dmfenton/wait smtp:1025 -t 120
#    - docker run --network=hexaa-test dmfenton/wait smtp:8025 -t 120
#    - docker run --network=hexaa-test dmfenton/wait web:80 -t 120
#    - docker exec -t frontend sh -c '/opt/hexaa-frontend/vendor/bin/behat -c /opt/hexaa-frontend/behat.yml -n --tags admin'
#  tags:
#    - dind


#test-organization:
#  stage: test
#  script:
#    - docker network create hexaa-test
#    - docker run --network=hexaa-test -d --name db -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_USER=someuser -e MYSQL_PASSWORD=somepass -e MYSQL_DATABASE=hexaa mysql
#    - docker run --network=hexaa-test -d --name memcached memcached
#    - docker run --network=hexaa-test -d --name grid -e USE_SELENIUM=2 elgalu/selenium:3.2.0-p4
#    - docker run --network=hexaa-test -d --name smtp mailhog/mailhog
#    - docker run --network=hexaa-test -d --name project.local $CONTAINER_TEST_IMAGE
#    - docker run --network=hexaa-test -d --name hexaa-test-data-manager hexaaproject/hexaa-test-data-manager:for-dev
#    - docker run --network=hexaa-test dmfenton/wait db:3306 -t 120
#    - docker run --network=hexaa-test -d --name hexaa-backend hexaaproject/hexaa-backend:for-dev
#    - docker run --network=hexaa-test dmfenton/wait hexaa-backend:80 -t 120
#    - docker run --network=hexaa-test dmfenton/wait project.local:443 -t 120
#    - docker exec -t project.local sh -c '/var/www/project/vendor/bin/behat -c /var/www/project/behat.yml -n --tags reset,organization'
#  tags:
#    - dind
#  except:
#    - staging

#test-service:
#  stage: test
#  script:
#    - docker network create hexaa-test
#    - docker run --network=hexaa-test -d --name db -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_USER=someuser -e MYSQL_PASSWORD=somepass -e MYSQL_DATABASE=hexaa mysql
#    - docker run --network=hexaa-test -d --name memcached memcached
#    - docker run --network=hexaa-test -d --name grid -e USE_SELENIUM=2 elgalu/selenium:3.2.0-p4
#    - docker run --network=hexaa-test -d --name smtp mailhog/mailhog
#    - docker run --network=hexaa-test -d --name project.local $CONTAINER_TEST_IMAGE
#    - docker run --network=hexaa-test -d --name hexaa-test-data-manager hexaaproject/hexaa-test-data-manager:for-dev
#    - docker run --network=hexaa-test dmfenton/wait db:3306 -t 120
#    - docker run --network=hexaa-test -d --name hexaa-backend hexaaproject/hexaa-backend:for-dev
#    - docker run --network=hexaa-test dmfenton/wait hexaa-backend:80 -t 120
#    - docker run --network=hexaa-test dmfenton/wait project.local:443 -t 120
#    - docker exec -t project.local sh -c '/var/www/project/vendor/bin/behat -c /var/www/project/behat.yml -n --tags reset,service'
#  tags:
#    - dind
#  except:
#    - staging
#
#test-profile:
#  stage: test
#  script:
#    - docker network create hexaa-test
#    - docker run --network=hexaa-test -d --name db -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_USER=someuser -e MYSQL_PASSWORD=somepass -e MYSQL_DATABASE=hexaa mysql
#    - docker run --network=hexaa-test -d --name memcached memcached
#    - docker run --network=hexaa-test -d --name grid -e USE_SELENIUM=2 elgalu/selenium:3.2.0-p4
#    - docker run --network=hexaa-test -d --name smtp mailhog/mailhog
#    - docker run --network=hexaa-test -d --name project.local $CONTAINER_TEST_IMAGE
#    - docker run --network=hexaa-test -d --name hexaa-test-data-manager hexaaproject/hexaa-test-data-manager:for-dev
#    - docker run --network=hexaa-test dmfenton/wait db:3306 -t 120
#    - docker run --network=hexaa-test -d --name hexaa-backend hexaaproject/hexaa-backend:for-dev
#    - docker run --network=hexaa-test dmfenton/wait hexaa-backend:80 -t 120
#    - docker run --network=hexaa-test dmfenton/wait project.local:443 -t 120
#    - docker exec -t project.local sh -c '/var/www/project/vendor/bin/behat -c /var/www/project/behat.yml -n --tags reset,profile'
#  tags:
#    - dind
#  except:
#    - staging
#
#test-admin:
#  stage: test
#  script:
#    - docker network create hexaa-test
#    - docker run --network=hexaa-test -d --name db -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_USER=someuser -e MYSQL_PASSWORD=somepass -e MYSQL_DATABASE=hexaa mysql
#    - docker run --network=hexaa-test -d --name memcached memcached
#    - docker run --network=hexaa-test -d --name grid -e USE_SELENIUM=2 elgalu/selenium:3.2.0-p4
#    - docker run --network=hexaa-test -d --name smtp mailhog/mailhog
#    - docker run --network=hexaa-test -d --name project.local $CONTAINER_TEST_IMAGE
#    - docker run --network=hexaa-test -d --name hexaa-test-data-manager hexaaproject/hexaa-test-data-manager:for-dev
#    - docker run --network=hexaa-test dmfenton/wait db:3306 -t 120
#    - docker run --network=hexaa-test -d --name hexaa-backend hexaaproject/hexaa-backend:for-dev
#    - docker run --network=hexaa-test dmfenton/wait hexaa-backend:80 -t 120
#    - docker run --network=hexaa-test dmfenton/wait project.local:443 -t 120
#    - docker exec -t project.local sh -c '/var/www/project/vendor/bin/behat -c /var/www/project/behat.yml -n --tags reset,admin'
#  tags:
#    - dind
#  except:
#    - staging

release_stable:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_STABLE_IMAGE
    - docker push $CONTAINER_STABLE_IMAGE

    # log in to hub.docker.com
    - docker login -u $DOCKERHUB_REGISTRY_USER -p $DOCKERHUB_REGISTRY_PASS
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_STABLE_RELEASE_IMAGE
    - docker push $CONTAINER_STABLE_RELEASE_IMAGE
  only:
    - master
  tags:
    - dind


release_staging:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_STAGING_RELEASE_IMAGE

    # log in to hub.docker.com
    - docker login -u $DOCKERHUB_REGISTRY_USER -p $DOCKERHUB_REGISTRY_PASS
    - docker push $CONTAINER_STAGING_RELEASE_IMAGE
  only:
    - staging
  tags:
    - dind

deploy_to_staging:
  stage: deploy
  script:
    - echo TODO
    #- ssh -A gitlab@$DEPLOY_STAGING_TARGET "docker login -u $REGISTRY_USER -p $REGISTRY_PASS $REGISTRY_ADDR; docker pull $CONTAINER_STAGING_RELEASE_IMAGE; cd /opt/hexaa; docker-compose down; docker volume rm hexaa_hexaa_ui_source; docker-compose up -d;"
  only:
    - staging
  tags:
    - dind

trigger_deploy:
  stage: deploy
  script:
    - $HEXAA_GROUP_DEPLOY_TRIGGER
